{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/DamianS18/Matma/blob/main/geogebra\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Jf17qleI-LKr"
      },
      "source": [
        "Znajdź równanie okręgu o środku w punkcie\n",
        "A(1,2) i promieniu r=3"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SnylMJ52-LKt",
        "outputId": "c3713335-06af-4871-f272-788d4b6be3a7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Równanie okręgu: (x - 1)^2 + (y - 2)^2 = 9\n"
          ]
        }
      ],
      "source": [
        "#Geo\n",
        "#eq1: (x-a)^(2)+(y-b)^(2)=r2\n",
        "#S=(1,2)\n",
        "\n",
        "# Środek okręgu\n",
        "h = 1  # Współrzędna x środka\n",
        "k = 2  # Współrzędna y środka\n",
        "\n",
        "# Promień okręgu\n",
        "r = 3\n",
        "# Wyświetlenie wyniku\n",
        "print(f\"Równanie okręgu: {lhs} = {rhs}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Równanie okręgu:\n",
        "# (x - h)^2 + (y - k)^2 = r^2\n",
        "# Podstawiamy wartości\n",
        "lhs = \"(x - {})^2 + (y - {})^2\".format(h, k)  # Lewa strona równania\n",
        "rhs = r**2  # Prawa strona równania\n",
        "lhs"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "Rs3iVr4pA8_b",
        "outputId": "a84a3ad4-0dd2-48d2-db7d-200e59d6344f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'(x - 1)^2 + (y - 2)^2'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rhs"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UQMi3LiqBTPD",
        "outputId": "7395f659-5ca7-4f5e-c854-449853dc3958"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "9"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Znajdź równanie paraboli przecinającej oś Ox w punktach x=2, x=4 oraz y(3)=1."
      ],
      "metadata": {
        "id": "a-X4n6ye_rcx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Geo\n",
        "#f(x)=-1 (x-2) (x-4)\n",
        "#A=(2,0)\n",
        "#B=(4,0)\n",
        "#C=(3,1)\n",
        "\n",
        "# Dane\n",
        "x1, x2 = 2, 4  # Miejsca zerowe paraboli\n",
        "point_x, point_y = 3, 1  # Punkt (3, 1) należący do paraboli"
      ],
      "metadata": {
        "id": "V5jdkcMz_5RK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Postać równania paraboli: y = a(x - x1)(x - x2)\n",
        "# Wstawiamy współrzędne punktu, aby znaleźć współczynnik 'a'\n",
        "a = point_y / ((point_x - x1) * (point_x - x2))"
      ],
      "metadata": {
        "id": "kTB9Mtx7BZDZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Równanie paraboli\n",
        "equation = f\"y = {a:.2f}(x - {x1})(x - {x2})\"\n",
        "equation"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "KaObu8kxBcsN",
        "outputId": "da1a82c3-22b3-40fa-910d-5c4a868647e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'y = -1.00(x - 2)(x - 4)'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Znajdź środek elipsy o równaniu x2+4y2−4x−16y+16=0."
      ],
      "metadata": {
        "id": "ZLsu8Gg8BuPS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Geoeq1: x^(2)+4 y^(2)-4 x-16 y+16=0            A=(2,2)\n",
        "\n",
        "import sympy as sp\n",
        "\n",
        "# Definiowanie zmiennych\n",
        "x, y = sp.symbols('x y')"
      ],
      "metadata": {
        "id": "dYCc-PUmCDO7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Równanie elipsy\n",
        "equation = x**2 + 4*y**2 - 4*x - 16*y + 16"
      ],
      "metadata": {
        "id": "VDX6PpRaCRE5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Grupowanie zmiennych x i y\n",
        "x_part = x**2 - 4*x  # Wyrazy zależne od x\n",
        "y_part = 4*y**2 - 16*y  # Wyrazy zależne od y"
      ],
      "metadata": {
        "id": "bIheZRf0CdWJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Kompletowanie kwadratu dla x\n",
        "x_completed = sp.complete_square(x_part)\n",
        "x_shifted = x_completed[0]  # Zapis w postaci kwadratu\n",
        "x_constant = x_completed[1]  # Stała dodana"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 193
        },
        "id": "HZHGQ-i6Cgzb",
        "outputId": "930ff436-e70f-4aeb-e869-9f0d75a548b9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "module 'sympy' has no attribute 'complete_square'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-52-e1243de6570d>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Kompletowanie kwadratu dla x\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mx_completed\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcomplete_square\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_part\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mx_shifted\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx_completed\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m  \u001b[0;31m# Zapis w postaci kwadratu\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mx_constant\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx_completed\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m  \u001b[0;31m# Stała dodana\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: module 'sympy' has no attribute 'complete_square'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Kompletowanie kwadratu dla y\n",
        "y_completed = sp.complete_square(y_part)\n",
        "y_shifted = y_completed[0]  # Zapis w postaci kwadratu\n",
        "y_constant = y_completed[1]  # Stała dodana"
      ],
      "metadata": {
        "id": "PucqocR3DQpx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Uaktualniamy równanie, uwzględniając stałe\n",
        "constant = 16 - x_constant - y_constant\n",
        "final_equation = x_shifted + y_shifted - constant"
      ],
      "metadata": {
        "id": "EM6MnYN1DTAS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Wyznaczenie środka elipsy\n",
        "h = -sp.solve(x_shifted, x)[0]  # Współrzędna x środka\n",
        "k = -sp.solve(y_shifted, y)[0]  # Współrzędna y środka\n",
        "h"
      ],
      "metadata": {
        "id": "7O6Y_D_hDWfT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "k"
      ],
      "metadata": {
        "id": "-6RPIQfWDZYF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dla danej hiperboli x2−y2=1 znajdź odległość między jej ramionami."
      ],
      "metadata": {
        "id": "MwQzJipldzRc"
      }
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.9"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}